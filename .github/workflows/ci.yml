name: ci

on:
  push:
    branches: [ main, master ]
  pull_request:

permissions:
  contents: read

jobs:
  build-test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
            go-version: '1.24.4'
            cache: true

      - name: Verify module graph
        run: |
          go mod download
          go mod verify

      - name: Format (fail if changes)
        run: |
          CHANGED=$(gofmt -l .)
          if [ -n "$CHANGED" ]; then
            echo "::error::gofmt found unformatted files:"
            echo "$CHANGED"
            exit 1
          fi

      - name: Vet
        run: go vet ./...

      - name: Staticcheck
        run: go run honnef.co/go/tools/cmd/staticcheck@latest ./...

      - name: Vulnerability scan
        run: go run golang.org/x/vuln/cmd/govulncheck@latest ./...

      - name: Test (race + coverage)
        run: |
          go test ./... -race -coverprofile=coverage.out -covermode=atomic
      - name: Upload coverage artifact
        uses: actions/upload-artifact@v4
        with:
          name: coverage
          path: coverage.out

  docker-build:
    runs-on: ubuntu-latest
    needs: build-test
    if: github.event_name != 'pull_request'  # build images only on push
    steps:
      - uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build image (no push)
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile
          push: false
          tags: |
            nt-backend-wrtc:ci-${{ github.sha }}
